name: Create Release

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-and-release:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      run: |
        export GOOS=linux
        export GOARCH=amd64
        export CGO_ENABLED=0

    - name: Build linux/amd64
      run: make build

    - name: Create release for linux/amd64
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}-linux-amd64
        release_name: Release ${{ github.ref }} for linux/amd64
        draft: false

    - name: Upload release asset for linux/amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/go-vbo365-mon-linux-amd64
        asset_name: go-vbo365-mon-linux-amd64

    - name: Set up Go
      run: |
        export GOOS=darwin
        export GOARCH=amd64
        export CGO_ENABLED=0

    - name: Build darwin/amd64
      run: make build

    - name: Create release for darwin/amd64
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}-darwin-amd64
        release_name: Release ${{ github.ref }} for darwin/amd64
        draft: false
        prerelease: false
        assets: dist/*

    - name: Set up Go
      run: |
        export GOOS=linux
        export GOARCH=arm64
        export CGO_ENABLED=0

    - name: Build linux/arm64
      run: make build

    - name: Create release for linux/arm64
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}-linux-arm64
        release_name: Release ${{ github.ref }} for linux/arm64
        draft: false
        prerelease: false
        assets: dist/*
    # Setup Windows 64Bit Release
    - name: Set up Go
      run: |
        export GOOS=windows
        export GOARCH=amd64
        export CGO_ENABLED=0

    - name: Build windows/amd64
      run: make build

    - name: Create release for windows/amd64
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}-windows-amd64
        release_name: Release ${{ github.ref }} for windows/amd64
        draft: false

    - name: Upload release asset for windows/amd64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/go-vbo365-mon-windows-amd64.exe
        asset_name: go-vbo365-mon-windows-amd64.exe

    # Setup MacOS ARM64 Build/Release
    - name: Set up Go
      run: |
        export GOOS=darwin
        export GOARCH=arm64
        export CGO_ENABLED=0

    - name: Build darwin/arm64
      run: make build

    - name: Create release for darwin/arm64
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}-darwin-arm64
        release_name: Release ${{ github.ref }} for darwin/arm64
        draft: false

    - name: Upload release asset for darwin/arm64
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/go-vbo365-mon-darwin-arm64
        asset_name: go-vbo365-mon-darwin-arm64
